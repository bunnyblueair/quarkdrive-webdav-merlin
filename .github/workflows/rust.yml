name: Build binary package

on:
  workflow_dispatch:
    inputs:
      release_body:
        description: 'Release 描述（可选）'
        required: false
        default: ''
  # push:
  #   tags:
  #     - '*'

jobs:
  build:
    if: github.event_name == 'workflow_dispatch'
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            target: armv7-unknown-linux-musleabihf

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          ref: ${{ github.ref_name }}

      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable

      - name: Install Dev tools
        run: sudo apt-get update && sudo apt-get install -y tree

      - name: clone
        run: git clone https://github.com/chenqimiao/quarkdrive-webdav 

      - name: Install cross
        run:  cargo install cross |
              pip3 install ziglang |
              cargo install --locked cargo-zigbuild

      - name: Add musl target
        if: contains(matrix.target, 'musl')
        run: rustup target add ${{ matrix.target }}

      - name: Build (cross for Linux, cargo for others)
        run: |
          
          cd quarkdrive-webdav
          cargo zigbuild --release  --target armv7-unknown-linux-musleabihf
          cp target/${{ matrix.target }}/release/quarkdrive-webdav* ../quarkdrivewebdav/bin
        # tree target/${{ matrix.target }}/
          # if [[ "${{ matrix.target }}" == *"linux-gnu"* ]]; then
          #   cross build --release --target ${{ matrix.target }}
          # else
          #   cargo build --release --target ${{ matrix.target }}
          # fi
      - name: dist
        run: git status &&git config --local user.email "41898282+github-actions[bot]@users.noreply.github.com" &&  git config --local user.name "github-actions[bot]" &&git add quarkdrivewebdav/ &&git commit -m "update by bot"
      - uses: ad-m/github-push-action@master
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          branch: master    

      # - name: Build
      #   if: matrix.target != 'aarch64-unknown-linux-gnu'
      #   run: cargo build --release --target ${{ matrix.target }}

      # - name: Package
      #   run: |
      #     mkdir dist
      #     cp target/${{ matrix.target }}/release/quarkdrive-webdav* dist/ || cp target/${{ matrix.target }}/release/quarkdrive-webdav.exe dist/
      #     cd dist
      #     if [[ "${{ matrix.os }}" == "windows-latest" ]]; then
      #       7z a ../quarkdrive-webdav-${{ matrix.target }}.zip *
      #     else
      #       tar czf ../quarkdrive-webdav-${{ matrix.target }}.tar.gz *
      #     fi

      # - name: Upload Release Asset
      #   uses: softprops/action-gh-release@v2
      #   with:
      #     files: |
      #       quarkdrive-webdav-${{ matrix.target }}.*
      #     body: ${{ github.event.inputs.release_body }}
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      # - name: 设置 Release 名称
      #   id: release_vars
      #   run: |
      #     echo "name=${{ github.ref_name }}" >> $GITHUB_OUTPUT

      # 你可以在后续创建 Release 的步骤中使用 ${{ steps.release_vars.outputs.name }} 作为 release 名称
      # ${{ github.event.inputs.release_body }} 可作为 release 描述
